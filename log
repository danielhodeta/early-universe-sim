Prior to April 14:
- Developed Particle class and simulation structure
- Collisions without momentum implemented
- No annihilation between matter and antimatter

April 14 => n/2-compare-multi-grav committ
- Collisions with Momentum implemented
- Size is offset by factor
- Movement calculation made more efficient (1/2 time)
- speed change moved to function
- Acceleration made GLOBAL

April 18 => m-a-annihil branch committ
- Moved collision to a different function to modularize and add annihilation function
- Added a function to convert a particle into a photon
- Added a function to annihilate matter antimatter pairs, momentum is not conserved

April 18 => photon-speed branch committ
- Added universal speed limits for baryons and photons
- Initialized photons with light speed
- Added function to change mass and resize automatically
- Modified v_set function to dampen particle speeds based on universal speed limits
- v_set also scales photon speed up to light speed
- added a function to add a new particle to the particle array and GRAVITY array
- Modified annihilation function to produce new particles from annihilation. This is applicable to matter and antimatter pairs with masses greater than one. In this situation, two photons will be produced and a matter and antimatter pair with smaller mass
- Added checks in macro_gravity() to prevent deleted particles from having an effect, photons are also skipped
- Added checks to division functions to avoid divide by zero
- Momentum is now conserved during annihilation.

April 19 => density-input committ
- Enabled matter, anti-matter and photon density input
- Made screen bigger

April 19 => alternate gravity merge committ
- Added conditions to collisions to make it so that the small body merges into the larger one
- Separated simulator into three files: the main simulator, the particle class and the global variable file
- Halved the square of the threshold distance needed for collision to make objects come closer to each other before merging

April 19 => pair-production committ
- Added check in main function to prevent displaying deleted particles
- Collision function returns 0 or 1 to indicate whether self has been deleted. If it has, macro_gravity() will return
- Added two functions in the Particle class to convery a particle into matter and anti matter
- Created pair_production function
- Created a threshold variable to store the value of the collision threshold for baryons and photons

April 21 => pair-production committ
- Added a feature where gravity can be strengthened by a factor
- Pair production is probabilistic
- After annihilation and pair production the new particles will move a couple of steps before being displayed to prevent continuous annihilation and pair production
- Every time a particle moves, its acceleration vectors will be reset to make sure only relevant particles are causing acceleration
- Added a separate collision threshold for annihilation and normal collision
- In the main function, removed deleted particle condition from the macro gravity line and moved it to the display function line. This is to make sure the simulation runs at a constant rate but deleted particles are not displayed

April 21 => post-ann-steps committ
- Photons step 3 times after annihilation
- Removed gravity strengthening factor and integrated it with the gravitational constant
- Window size is a function of particle number

April 21 => spherical-universe committ
- Changed width to height proportion
- Changed gravitational constant to 1
- Changed pair production probability to 0.01
- Each particle now starts with a random speed
- Made universe spherical, i.e. the window of the simulation is all there is to the unviverse

April 21 => user-input-params committ
- Implemented user input of global variables through a config file
